snippet clg "console.log()" b
console.log(${1:'$2', $3});
endsnippet

snippet fore "forEach" b
$1.forEach(($2) => {
	$3
});
endsnippet

snippet for "for" b
for(let i = $1; i < $2; i++) {
	$3
}
endsnippet

snippet pub "public" b
public $1:$2
endsnippet

snippet f "function" b
$1($2): ${3:void} {
	$4
}
endsnippet

snippet sub "subscribe" b
$1.subscribe(($2): ${3:void} => {
	$4
});
endsnippet

snippet if "if" b
if ($1) {
	$2
} ${3: else {
	$4
}}
endsnippet

snippet var "variable" b
$1 $2 = ${3:new $4()};
endsnippet

snippet ret	"return" b
return $1;
endsnippet

snippet reducer "reducer" b
import { createReducer, on, Action } from '@ngrx/store';
import * as actions from './$1';

export const initialState = $2;

const _$3Reducer = createReducer( initialState,
  on(actions.$4, ( state ) => $5)
);

export const $3Reducer = (state = initialState, action: Action) => _$3Reducer(state, action);
endsnippet
